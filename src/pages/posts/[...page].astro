---
import type { GetStaticPaths, Page } from "astro";
import type { CollectionEntry } from "astro:content";

import Pagination from "@/components/Paginator.astro";
import PostPreview from "@/components/blog/PostPreview.astro";
import { getAllPosts, getUniqueTags, groupPostsByYear, sortMDByDate } from "@/data/post";
import PageLayout from "@/layouts/Base.astro";
import GoBack from "@/components/GoBack.astro";


export const getStaticPaths = (async ({ paginate }) => {
	const MAX_POSTS_PER_PAGE = 25;
	const allPosts = await getAllPosts();
	const allPostsByDate = sortMDByDate(allPosts);
	const uniqueTags = getUniqueTags(allPosts);
	return paginate(allPostsByDate, { pageSize: MAX_POSTS_PER_PAGE, props: { uniqueTags } });
}) satisfies GetStaticPaths;

interface Props {
	page: Page<CollectionEntry<"post">>;
	uniqueTags: string[];
}

const { page, uniqueTags } = Astro.props;

const meta = {
	description: "Read my collection of posts and the things that interest me",
	title: "Posts",
};

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			text: `← Previous Page`,
			url: page.url.prev,
		},
	}),
	...(page.url.next && {
		nextUrl: {
			text: `Next Page →`,
			url: page.url.next,
		},
	}),
};

const groupedByYear = groupPostsByYear(page.data);
const descYearKeys = Object.keys(groupedByYear).sort((a, b) => +b - +a);
---

<PageLayout meta={meta}>
	<GoBack  />
	<!-- <div class="container1" style="padding:0 4%">
	<h1 class="title mb-6">Posts</h1>
</div> -->
<div style="padding:1vh 0">
	{
		!!uniqueTags.length && (
			<aside style="padding:4vh 1vw 2vh 1vw; margin:0; display:flex; gap:2vw; align-items:start;">
				<h2 class="title mb-4 flex items-center text-lg" >
					<svg
						aria-hidden="true"
						class="h-6 w-6"
						fill="none"
						stroke="currentColor"
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="1.5"
						viewBox="0 0 24 24"
						xmlns="http://www.w3.org/2000/svg"
					>
						<path d="M0 0h24v24H0z" fill="none" stroke="none" />
						<path d="M7.859 6h-2.834a2.025 2.025 0 0 0 -2.025 2.025v2.834c0 .537 .213 1.052 .593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-6.117 -6.116a2.025 2.025 0 0 0 -1.431 -.593z" />
						<path d="M17.573 18.407l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-7.117 -7.116" />
						<path d="M6 9h-.01" />
					</svg>
					Tags
				</h2>
				<ul class="flex flex-wrap gap-2 text-bgColor button">
					{uniqueTags.map((tag) => (
						<li>
							<a
								aria-label={`View all posts with the tag: ${tag}`}
								class="flex items-center justify-center rounded-lg  p-1"
								href={`/tags/${tag}/`}
							>
								{tag}
							</a>
						</li>
					))}
				</ul>
				<span class="mt-4 block sm:text-start">
					<a aria-label="View all blog categories" class="sm:hover:text-accent" href="/tags/">
						View all →
					</a>
				</span>
			</aside>
		)
	}
	<div class="contentpanel grid-container panels">



			{
				descYearKeys.map((yearKey) => (
					<>
						{/* <div style="display:grid; place-content:center; align-content:center;"><h2 class="title text-lg">{yearKey}</h2></div> */}
				
							{groupedByYear[yearKey]?.map((p) => (
								// <li class="grid gap-2 sm:grid-cols-[auto_1fr] sm:[&_q]:col-start-2">
									<PostPreview post={p} />
								// </li>
							))}
						

					</>
				))
			}



			<div class="" style="display:grid; place-content:center; align-content:center; min-width:380px; min-height:180px; max-height:85%;"><Pagination {...paginationProps} /></div>

			
			
		</div>
		
	</div>

</PageLayout>
