---
import ThemeToggle from "../ThemeToggle.astro";
import { menuLinks } from "@/site-config";
import { Image } from "astro:assets";
import LogoImage from "../../../src/assets/dogpooper-logo-text.webp";
import { getEntry } from 'astro:content';

import Search from "../Search.astro";
import Switch from "@/components/Switch.jsx";

const url = new URL(Astro.request.url);
const siteSettings = await getEntry('siteSettings', 'main');
const { showHeader, showLogo, showTheme, showSearch, showSwitch } = siteSettings.data;
---

{showHeader && (
  <div id="menu" class="menu header">
    {showLogo && (
      <a href="/" aria-current={url.pathname === "/" ? "page" : false}>
        <Image src={LogoImage} alt="Dog Poopers Logo" class="cornerlogo" style={{
					position: "relative",
					top: "1%",
					left: "1%",
					padding: "0 0 0 0",
					marginLeft: "",
					maxHeight: "60px",
					maxWidth: "90px"
				}}
					loading="eager"
					fetchpriority="high" />
      </a>
    )}


      <ul
				class="topmenu"
				style={{
					fontSize: "clamp(.6rem, 1.6vw, 1.8rem)",
					textAlign: "center",
					maxHeight: "",
					display: "flex",
					justifyContent: "space-around",
					gap: "4vw",
					alignItems: "center",
					margin: "0 auto 0 auto",
					padding: "0 0 0 0",
					border: "0px solid white",
					height:'60px',
					visibility:""
				}}
			>
        {
					menuLinks.map((link) => (
						<li>
							<a
								href={link.path}
								class="px-4 py-4 sm:py-0 sm:hover:underline"
								aria-current={url.pathname === link.path ? "page" : false}
								rel="prefetch"
								data-astro-reload
							>
								{link.title}
							</a>
						</li>
					))
				}
      </ul>
    

    <div id="missioncontrol" class="missioncontrol sitecontrols" style={{
				display: "flex",
				justifyContent: "space-around",
				fontSize: "clamp(.8rem, 2.3vw, 2.5rem)",
				gap: "3vw",
				textAlign: "center",
				maxHeight: "",
				alignItems: "center",
				padding: "0 10px 0 0",
			}}>
				{showSearch && (<Search />)}
					
				{showSwitch && (<Switch client:load />)}
      {showTheme && (<ThemeToggle />)}
    </div>
  </div>
)}
<!-- 
<button
	aria-label="Back to Top"
	class="z-90 fixed bottom-8 end-4 flex h-10 w-10 translate-y-28 items-center justify-center rounded-full border-2 border-transparent bg-zinc-200 text-3xl opacity-0 transition-all duration-300 hover:border-zinc-400 data-[show=true]:translate-y-0 data-[show=true]:opacity-100 dark:bg-zinc-700 sm:end-8 sm:h-12 sm:w-12"
	data-show="false"
	id="to-top-btn"
	><svg
		aria-hidden="true"
		class="h-6 w-6"
		fill="none"
		focusable="false"
		stroke="currentColor"
		stroke-width="2"
		viewBox="0 0 24 24"
		xmlns="http://www.w3.org/2000/svg"
	>
		<path d="M4.5 15.75l7.5-7.5 7.5 7.5" stroke-linecap="round" stroke-linejoin="round"></path>
	</svg>
</button> -->



  
  
<!-- <script>
	const scrollBtn = document.getElementById("to-top-btn") as HTMLButtonElement;
	const targetHeader = document.getElementById("blog-hero") as HTMLDivElement;

	function callback(entries: IntersectionObserverEntry[]) {
		entries.forEach((entry) => {
			// only show the scroll to top button when the heading is out of view
			scrollBtn.dataset.show = (!entry.isIntersecting).toString();
		});
	}

	scrollBtn.addEventListener("click", () => {
		document.documentElement.scrollTo({ behavior: "smooth", top: 0 });
	});

	const observer = new IntersectionObserver(callback);
	observer.observe(targetHeader);
</script> -->