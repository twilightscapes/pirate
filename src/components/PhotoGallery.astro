---
import { Image } from 'astro:assets';
// import PageLayout from "@/layouts/Base.astro";
import GalleryLightbox from '../components/GalleryLightbox';
import { createReader } from '@keystatic/core/reader';
import keystaticConfig from '../../keystatic.config';
const reader = createReader(process.cwd(), keystaticConfig);
const photoSettings = await reader.singletons.photoSettings.read();
const defaultDirectory = photoSettings?.defaultDirectory || 'all';

const imageFiles = import.meta.glob('/public/images/photos/**/*.{jpg,jpeg,png,gif,webp,avif}', { eager: true });

const images = Object.entries(imageFiles).map(([path, file]) => ({
  src: path.replace('/public', ''),
  alt: path.split('/').pop()?.split('.')[0],
  title: path.split('/').pop()?.split('.')[0],
  directory: path.split('/').slice(-2, -1)[0],
  isDefault: defaultDirectory === 'all' || path.split('/').slice(-2, -1)[0] === defaultDirectory
}));

const directories = [...new Set(images.map(img => img.directory))].sort();
const finalDirectories = [...directories, 'all'];

const showCaptions = photoSettings?.showCaptions ?? true;
const showGallerySelector = photoSettings?.showGallerySelector ?? true;

const filteredImages = images.filter(image => 
  defaultDirectory === 'all' || image.directory === defaultDirectory
);
const meta = {
  description: "Image Gallery",
  title: "Image Gallery",
  ogImage: "",
  articleDate: ""
};
---



{showGallerySelector && (

<div class="cattags" style={{ maxWidth: '', margin: '0px auto 0 auto', display: 'flex', placeSelf: 'center', gap: '0', color: '' }}>
      
      

        
<select id="directorySelect" style={{ background: '#222', border: '1px solid #000', borderRadius: '3px', padding: '8px', boxShadow: '0px 0px 0px 1px #000', opacity:'.9', color:'#fff' }}>
  {finalDirectories.map((dir) => (
    <option value={dir} selected={dir === defaultDirectory}>
      {dir === 'all' ? 'All Images' : dir}
    </option>
  ))}
</select>

</div>
)}
<div class="contentpanel grid-container panels" style="padding-top:7vh">
  <div class="sliderSpacer" style={{ height: "", paddingTop: "", display: "" }} />
  {images.map((image) => (
    <div class={`post-card1 ${image.isDefault ? 'visible' : 'hidden'}`} data-directory={image.directory}>
      <Image 
        src={image.src} 
        alt=""
        width={800}
        height={600}
        class="object-contain"
        // loading="eager"
        // fetchpriority="high"
      />
      {showCaptions && (
        <div class="image-caption panel">
          <h2>{image.title}</h2>
        </div>
      )}
    </div>
  ))}
</div>
<GalleryLightbox client:only="react" images={images} />
<style>
#directorySelect {
  position: fixed;
  top: 65px;
  left: 0;
  right: 0;
z-index: 2;
  max-width: 300px;
  margin: 0 auto;
  padding: 1vh 1vw;
}

.post-card1 {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.image-caption {
  margin-top: 8px;
  text-align: center;
  /* font-size: 14px; */
  /* color: #555; */
  filter:brightness(.75);
}

.post-card1.hidden {
  display: none;
}

.post-card1.visible {
  display: block;
}
</style>
<script>
const directorySelect = document.getElementById('directorySelect');
const galleryContainer = document.querySelector('.contentpanel');

function scrollToTop() {
  const target = document.querySelector('.contentpanel');
  if (target.classList.contains('horizontal-slider')) {
    target.scrollTo({ left: 0, behavior: 'smooth' });
  } else {
    window.scrollTo({ top: 0, behavior: 'smooth' });
  }
  
  // Force scroll to top
  setTimeout(() => {
    window.scrollTo(0, 0);
    document.body.scrollTop = 0;
    document.documentElement.scrollTop = 0;
  }, 100);
}

function filterImages(selectedDir) {
  const images = galleryContainer.querySelectorAll('.post-card1');
  
  images.forEach((image) => {
    const imageDir = image.dataset.directory;
    if (selectedDir === 'all' || imageDir === selectedDir) {
      image.style.display = 'block';
    } else {
      image.style.display = 'none';
    }
  });
}
directorySelect?.addEventListener('change', (event) => {
  filterImages(event.target.value);
  scrollToTop();
});
</script>
